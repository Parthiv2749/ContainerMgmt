{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkPlace\\\\Seychelles_Sahaj\\\\containermgmt\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create AuthContext to share authentication logic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"access_token\") || null);\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refresh_token\") || null);\n\n  // Login function to store tokens in localStorage and context\n  const login = (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n    localStorage.setItem(\"access_token\", accessToken);\n    localStorage.setItem(\"refresh_token\", refreshToken);\n  };\n\n  // Logout function to clear tokens\n  const logout = () => {\n    setAccessToken(null);\n    setRefreshToken(null);\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n  };\n\n  // Function to refresh access token (optional)\n  const refreshAccessToken = async () => {\n    if (!refreshToken) return null;\n    const response = await fetch(`http://${process.env.REACT_APP_NETWORK}:${process.env.REACT_APP_PORT}/refresh`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${refreshToken}`\n      }\n    });\n    if (!response.ok) {\n      logout(); // If refresh fails, log the user out\n      return null;\n    }\n    const data = await response.json();\n    setAccessToken(data.access_token); // Update access token\n    localStorage.setItem(\"access_token\", data.access_token); // Save new token\n    return data.access_token;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      refreshToken,\n      login,\n      logout,\n      refreshAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"2VtiPSRssR/XKpSoaEo3CHDtHNI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","accessToken","setAccessToken","localStorage","getItem","refreshToken","setRefreshToken","login","setItem","logout","removeItem","refreshAccessToken","response","fetch","process","env","REACT_APP_NETWORK","REACT_APP_PORT","method","headers","ok","data","json","access_token","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/WorkPlace/Seychelles_Sahaj/containermgmt/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create AuthContext to share authentication logic\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"access_token\") || null);\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refresh_token\") || null);\r\n\r\n  // Login function to store tokens in localStorage and context\r\n  const login = (accessToken, refreshToken) => {\r\n    setAccessToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n    localStorage.setItem(\"access_token\", accessToken);\r\n    localStorage.setItem(\"refresh_token\", refreshToken);\r\n  };\r\n\r\n  // Logout function to clear tokens\r\n  const logout = () => {\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n  };\r\n\r\n  // Function to refresh access token (optional)\r\n  const refreshAccessToken = async () => {\r\n    if (!refreshToken) return null;\r\n\r\n    const response = await fetch(`http://${process.env.REACT_APP_NETWORK}:${process.env.REACT_APP_PORT}/refresh`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${refreshToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      logout();  // If refresh fails, log the user out\r\n      return null;\r\n    }\r\n\r\n    const data = await response.json();\r\n    setAccessToken(data.access_token);  // Update access token\r\n    localStorage.setItem(\"access_token\", data.access_token);  // Save new token\r\n    return data.access_token;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ accessToken, refreshToken, login, logout, refreshAccessToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAC5F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC;;EAE/F;EACA,MAAMG,KAAK,GAAGA,CAACN,WAAW,EAAEI,YAAY,KAAK;IAC3CH,cAAc,CAACD,WAAW,CAAC;IAC3BK,eAAe,CAACD,YAAY,CAAC;IAC7BF,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEP,WAAW,CAAC;IACjDE,YAAY,CAACK,OAAO,CAAC,eAAe,EAAEH,YAAY,CAAC;EACrD,CAAC;;EAED;EACA,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBP,cAAc,CAAC,IAAI,CAAC;IACpBI,eAAe,CAAC,IAAI,CAAC;IACrBH,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;IACvCP,YAAY,CAACO,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACN,YAAY,EAAE,OAAO,IAAI;IAE9B,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAUC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIF,OAAO,CAACC,GAAG,CAACE,cAAc,UAAU,EAAE;MAC5GC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUd,YAAY;MACzC;IACF,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;MAChBX,MAAM,CAAC,CAAC,CAAC,CAAE;MACX,OAAO,IAAI;IACb;IAEA,MAAMY,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCpB,cAAc,CAACmB,IAAI,CAACE,YAAY,CAAC,CAAC,CAAE;IACpCpB,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEa,IAAI,CAACE,YAAY,CAAC,CAAC,CAAE;IAC1D,OAAOF,IAAI,CAACE,YAAY;EAC1B,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAExB,WAAW;MAAEI,YAAY;MAAEE,KAAK;MAAEE,MAAM;MAAEE;IAAmB,CAAE;IAAAZ,QAAA,EAC3FA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,GAAA,CA/CWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}