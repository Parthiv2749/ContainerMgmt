{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkPlace\\\\Seychelles_Sahaj\\\\containermgmt\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create a context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to access authentication state and actions\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component that provides the authentication context\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [token, setToken] = useState(localStorage.getItem(\"access_token\") || null);\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refresh_token\") || null);\n  const [loading, setLoading] = useState(true); // Loading state to handle async actions\n\n  // Function to store tokens in localStorage\n  const storeTokens = (accessToken, refreshToken) => {\n    localStorage.setItem(\"access_token\", accessToken);\n    localStorage.setItem(\"refresh_token\", refreshToken);\n    setToken(accessToken);\n    setRefreshToken(refreshToken);\n  };\n\n  // Function to clear tokens from localStorage and state\n  const clearTokens = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    setToken(null);\n    setRefreshToken(null);\n  };\n\n  // Function to refresh the access token\n  const refreshAccessToken = async () => {\n    if (!refreshToken) {\n      return null;\n    }\n    try {\n      const response = await fetch(`http://${process.env.REACT_APP_NETWORK}:${process.env.REACT_APP_PORT}/refresh`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${refreshToken}`\n        }\n      });\n      if (!response.ok) {\n        clearTokens();\n        return null;\n      }\n      const data = await response.json();\n      storeTokens(data.access_token, refreshToken); // Store new access token\n      return data.access_token;\n    } catch (error) {\n      clearTokens();\n      return null;\n    }\n  };\n\n  // Function to log in the user\n  const login = (accessToken, refreshToken) => {\n    storeTokens(accessToken, refreshToken);\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    clearTokens();\n  };\n\n  // When the component mounts, we set loading to false\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  const value = {\n    token,\n    refreshToken,\n    login,\n    logout,\n    refreshAccessToken,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"9T+tzBGMuaTHCWZWRcjcyZe3t9U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","token","setToken","localStorage","getItem","refreshToken","setRefreshToken","loading","setLoading","storeTokens","accessToken","setItem","clearTokens","removeItem","refreshAccessToken","response","fetch","process","env","REACT_APP_NETWORK","REACT_APP_PORT","method","headers","ok","data","json","access_token","error","login","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/WorkPlace/Seychelles_Sahaj/containermgmt/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// Create a context for authentication\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to access authentication state and actions\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider component that provides the authentication context\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"access_token\") || null);\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refresh_token\") || null);\r\n  const [loading, setLoading] = useState(true); // Loading state to handle async actions\r\n\r\n  // Function to store tokens in localStorage\r\n  const storeTokens = (accessToken, refreshToken) => {\r\n    localStorage.setItem(\"access_token\", accessToken);\r\n    localStorage.setItem(\"refresh_token\", refreshToken);\r\n    setToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n  };\r\n\r\n  // Function to clear tokens from localStorage and state\r\n  const clearTokens = () => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    setToken(null);\r\n    setRefreshToken(null);\r\n  };\r\n\r\n  // Function to refresh the access token\r\n  const refreshAccessToken = async () => {\r\n    if (!refreshToken) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://${process.env.REACT_APP_NETWORK}:${process.env.REACT_APP_PORT}/refresh`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${refreshToken}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        clearTokens();\r\n        return null;\r\n      }\r\n\r\n      const data = await response.json();\r\n      storeTokens(data.access_token, refreshToken); // Store new access token\r\n      return data.access_token;\r\n    } catch (error) {\r\n      clearTokens();\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Function to log in the user\r\n  const login = (accessToken, refreshToken) => {\r\n    storeTokens(accessToken, refreshToken);\r\n  };\r\n\r\n  // Function to log out the user\r\n  const logout = () => {\r\n    clearTokens();\r\n  };\r\n\r\n  // When the component mounts, we set loading to false\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const value = {\r\n    token,\r\n    refreshToken,\r\n    login,\r\n    logout,\r\n    refreshAccessToken,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}